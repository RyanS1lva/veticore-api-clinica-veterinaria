DROP TABLE IF EXISTS veti_user CASCADE;
DROP TABLE IF EXISTS appointment CASCADE;
DROP TABLE IF EXISTS pet CASCADE;
DROP TABLE IF EXISTS veterinarian CASCADE;
DROP TABLE IF EXISTS people CASCADE;
DROP TABLE IF EXISTS type CASCADE;

CREATE TABLE veti_user (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
	name VARCHAR(200) NOT NULL,
	email VARCHAR(100) UNIQUE NOT NULL,
	password VARCHAR(250) NOT NULL
);

CREATE TABLE people (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
	name VARCHAR(200) NOT NULL,
	cpf VARCHAR(11) UNIQUE NOT NULL,
	phone VARCHAR(20) NOT NULL,
	email VARCHAR(100),
	active BOOLEAN DEFAULT true NOT NULL,
	created_at TIMESTAMP NOT NULL
);

CREATE TABLE veterinarian (
	veterinarian_id BIGINT PRIMARY KEY NOT NULL,
	specialty VARCHAR(50) NOT NULL,
	crmv VARCHAR(20) UNIQUE,

	CONSTRAINT fk_veterinarian_people FOREIGN KEY (veterinarian_id) REFERENCES people(id)
);

CREATE TABLE type (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
	name VARCHAR(50) NOT NULL
);

CREATE TABLE pet (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
	name VARCHAR(100) NOT NULL,
	type_id BIGINT NOT NULL,
	breed VARCHAR(50) NOT NULL,
	medical_notes TEXT,
	owner_id BIGINT NOT NULL,
	active BOOLEAN DEFAULT true NOT NULL,
	created_at TIMESTAMP NOT NULL,

	CONSTRAINT fk_pet_type FOREIGN KEY (type_id) REFERENCES type(id),
	CONSTRAINT fk_pet_owner FOREIGN KEY (owner_id) REFERENCES people(id)
);

CREATE TABLE appointment (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
	pet_id BIGINT NOT NULL,
	owner_id BIGINT NOT NULL,
	veterinarian_id BIGINT NOT NULL,
	appointment_type VARCHAR(30) NOT NULL,
	notes TEXT,
	appointment_date TIMESTAMP NOT NULL,
	status VARCHAR(20) DEFAULT 'SCHEDULED' NOT NULL,
	created_at TIMESTAMP NOT NULL,

	CONSTRAINT fk_appointment_pet FOREIGN KEY (pet_id) REFERENCES pet(id),
	CONSTRAINT fk_appointment_owner FOREIGN KEY (owner_id) REFERENCES people(id),
	CONSTRAINT fk_appointment_veterinarian FOREIGN KEY (veterinarian_id) REFERENCES veterinarian(veterinarian_id),
	CONSTRAINT valid_status CHECK (status IN ('SCHEDULED', 'COMPLETED', 'CANCELLED')),
	CONSTRAINT valid_type CHECK (appointment_type IN ('CONSULTATION', 'SURGERY'))
);